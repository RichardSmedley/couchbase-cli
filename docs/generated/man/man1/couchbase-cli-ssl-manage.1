'\" t
.\"     Title: couchbase-cli-ssl-manage
.\"    Author: Couchbase
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 09/07/2017
.\"    Manual: Couchbase CLI Manual
.\"    Source: Couchbase CLI 1.0.0
.\"  Language: English
.\"
.TH "COUCHBASE\-CLI\-SSL\" "1" "09/07/2017" "Couchbase CLI 1\&.0\&.0" "Couchbase CLI Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
couchbase-cli-ssl-manage \- Manage SSL certificates
.SH "SYNOPSIS"
.sp
.nf
\fIcouchbase\-cli ssl\-manage\fR [\-\-cluster <url>] [\-\-username <user>]
          [\-\-password <password>] [\-\-cluster\-cert\-info] [\-\-node\-cert\-info]
          [\-\-regenerate\-cert <file>] [\-\-set\-node\-certificate]
          [\-\-upload\-cluster\-ca <file>]
          [\-\-set\-client\-auth\-state <enable|disable|mandatory>]
          [\-\-set\-client\-auth\-path <subject\&.cn|san\&.uri|san\&.dnsname|san\&.email>]
          [\-\-set\-client\-auth\-prefix <prefix>]
          [\-\-set\-client\-auth\-delimiter <delimiter>]
          [\-\-client\-auth] [\-\-extended]
.fi
.SH "DESCRIPTION"
.sp
This command allows users to manage their SSL and X\&.509 certificates\&.
.SH "OPTIONS"
.PP
\-c, \-\-cluster
.RS 4
Specfies the hostname of a node in the cluster\&. See the HOST FORMATS section for more information on specifying a hostname\&.
.RE
.PP
\-u, \-\-user <username>
.RS 4
Specifies the username of the user executing the command\&. If you do not have a user account with permision to execute the command then it will fail with an unauthorized error\&.
.RE
.PP
\-p, \-\-password <password>
.RS 4
Specifies the password of the user executing the command\&. If you do not have a user account with permision to execute the command then it will fail with an unauthorized error\&. If this argument is specified, but no password is given then the command will prompt the user for a password through non\-echoed stdin\&. You may also specify your password by using the environment variable CB_REST_PASSWORD\&.
.RE
.PP
\-\-cluster\-cert\-info
.RS 4
Retrieves the cluster certificate and prints it to stdout\&.
.RE
.PP
\-\-node\-cert\-info
.RS 4
Retrieves the node certificate and prints it to stdout\&.
.RE
.PP
\-\-regenerate\-cert <file>
.RS 4
Regenerates the cluster certificate and saves it to the file specified in the value fo this option\&.
.RE
.PP
\-\-set\-node\-certificate
.RS 4
Sets the node certificate\&. Before running this command you must copy the node certificate into your installation\&. When this command is invoked the cluster will read the node certificate from the node specified and set it as the node certificate for that node\&.
.RE
.PP
\-\-upload\-cluster\-ca <file>
.RS 4
Uploads the certificate specified to the cluster\&. The uploaded certificate will replace the cluster certificate in this cluster\&.
.RE
.PP
\-\-set\-client\-auth\-state <enable|disable|mandatory>
.RS 4
Sets the client certificate auth to following values:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
disabled : no client certification
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
enabled : if the client presents a valid client certificate then we try and validate it\&. If the validation fails or no certificate is presented we fall back to the existing authentication methods
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
mandatory : the client has to present valid SSL certificate in order to access successfully authorise the connection\&.
.RE
.RE
.sp
\-\-set\-client\-auth\-path <path>: The field which will be used to extract the username from the certificate Currently only subject\&.cn, san\&.uri, san\&.email and san\&.dnsname are allowed
.sp
\-\-set\-client\-auth\-prefix <prefix> Optional\&. Prefix to be ignored from the field value
.sp
\-\-set\-client\-auth\-delimiter <delimiter> Optional\&. The delimiter can either be a string or a character, the parsing of the username ends when the delimter value is found\&.
.PP
\-\-client\-auth
.RS 4
This options used to get the client cert auth value
.RE
.PP
\-\-extended
.RS 4
This option is used with the \-\-cluster\-cert\-info and specifies that extended cluster certificate information should be printed to stdout\&.
.RE
.SH "HOST FORMATS"
.sp
When specifying a host for the couchbase\-cli command the following formats are expected:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
couchbase://<addr>
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
<addr>:<port>
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
http://<addr>:<port>
.RE
.sp
It is recommended to use the couchbase://<addr> format for standard installations\&. The other two formats allow an option to take a port number which is needed for non\-default installations where the admin port has been set up on a port other that 8091\&.
.SH "EXAMPLES"
.sp
To get cluster certificate information run the following command\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ couchbase\-cli ssl\-manage \-c 192\&.168\&.1\&.5 \-u Administrator \e
 \-p password \-\-cluster\-cert\-info
.fi
.if n \{\
.RE
.\}
.sp
Note that you can also get extended cluster certificat information by adding the \-\-extended flag as shown below\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ couchbase\-cli ssl\-manage \-c 192\&.168\&.1\&.5 \-u Administrator \e
 \-p password \-\-cluster\-cert\-info \-\-extended
.fi
.if n \{\
.RE
.\}
.sp
To get node certificate information run the following command\&. Note that the node certificate will be from the node specified by the \-c option\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ couchbase\-cli ssl\-manage \-c 192\&.168\&.1\&.5 \-u Administrator \e
 \-p password \-\-node\-cert\-info \-\-extended
.fi
.if n \{\
.RE
.\}
.sp
To automatically regenerate the cluster certificate and save the new certificate to a file at /root/new_cluster\&.cert run the following command\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ couchbase\-cli ssl\-manage \-c 192\&.168\&.1\&.5 \-u Administrator \e
 \-p password \-\-regenerate\-cert /root/new_cluster\&.cert
.fi
.if n \{\
.RE
.\}
.sp
Note that the command above should never be run if you are using X\&.509 certificates because using the \-\-regenerate\-cert command will generate an unsigned certificate for the cluster to use\&.
.sp
To update a node certificate you will first need to copy the new certificate to the certificate inbox folder on the node you wish to change the certificate\&. Once you have done this you can run the command below to tell the server to begin using the new certificate\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ couchbase\-cli ssl\-manage \-c 192\&.168\&.1\&.5 \-u Administrator \e
 \-p password \-\-set\-node\-certificate
.fi
.if n \{\
.RE
.\}
.sp
To update the cluster certificate you can run the command below\&. Note that our certificate is located at /root/new_cluster\&.cert in this example\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ couchbase\-cli ssl\-manage \-c 192\&.168\&.1\&.5 \-u Administrator \e
 \-p password \-\-upload\-cluster\-ca /root/new_cluster\&.cert
.fi
.if n \{\
.RE
.\}
.sp
To set the client cert auth to mandatory, following command can be run\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ couchbase\-cli ssl\-manage \-c 192\&.168\&.1\&.5 \-u Administrator \e
 \-p password \-\-set\-client\-auth mandatory
.fi
.if n \{\
.RE
.\}
.sp
To get the client cert auth value, following command should be run\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ couchbase\-cli ssl\-manage \-c 192\&.168\&.1\&.5 \-u Administrator \e
 \-p password \-\-client\-auth
.fi
.if n \{\
.RE
.\}
.SH "ENVIRONMENT AND CONFIGURATION VARIABLES"
.sp
CB_REST_PASSWORD Specifies the password of the user executing the command\&. This environment variable allows you to specify a default argument for the \-p/\-\-password argument on the command line\&. It also allows the user to ensure that their password are not cached in their command line history\&.
.sp
CB_REST_PASSWORD Specifies the password of the user executing the command\&. This environment variable allows you to specify a default argument for the \-p/\-\-password argument on the command line\&.
.SH "SEE ALSO"
.sp
\fBcouchbase-cli-cluster-edit\fR(1)
.SH "COUCHBASE-CLI"
.sp
Part of the \fBcouchbase-cli\fR(1) suite
.SH "AUTHORS"
.PP
\fBCouchbase\fR
