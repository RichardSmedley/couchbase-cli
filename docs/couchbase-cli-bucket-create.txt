couchbase-cli-bucket-create(1)
==============================

NAME
----
couchbase-cli-bucket-create - Create a new bucket


SYNOPSIS
--------
[verse]
'couchbase-cli bucket-create' [--cluster <url>] [--username <user>]
	  [--password <password>] [--bucket <name>] [--bucket-type <type>]
	  [--bucket-ramsize <size>] [--bucket-replica <num>] [--bucket-port <port>]
	  [--bucket-priority <priority>] [--bucket-eviction-policy <policy>]
	  [--enable-flush <num>] [--enable-index-replica <num>]
	  [--conflict-resolution <type>] [--wait]

DESCRIPTION
-----------

Creates a new bucket. Allows creation of Couchbase, Ephemeral, and
Memcached buckets, and supports the various configuration parameters for these
buckets.

OPTIONS
-------

include::part-common-options.txt[]

--bucket <name>::
	The name of the bucket to create. The bucket name can only contain
	characters in the range A-Z, a-z, 0-9; plus underscore, period, dash and
	percent; and can be a maximum of 100 characters in length.

--bucket-type <type>::
	The type of bucket to create. Accepted bucket types are "couchbase",
	"ephemeral", and "memcached". The Couchbase bucket is the standard bucket
	type. It supports data persistence, replication, caching, indexing, views,
	and N1QL queries. The ephemeral bucket is an in-memory bucket similar to the
	Couchbase bucket, but it does not support data persistence or views. The
	Memcached bucket is a cache only bucket that does not support persistence,
	replication, indexing, views or N1QL querying. This bucket type provides the
	same behavior as Memcached Server.

--bucket-ramsize <size>::
	The amount of memory to allocate to the cache for this bucket, in Megabytes.
	The memory quota of this bucket must fit into the overall cluster memory
	quota. The minimum cache size is 100MB.

--bucket-replica <num>::
	The number of servers to which data is replicated. Replicas provide protection
	against data loss by keeping copies of this bucket's data on multiple
	servers. By default, the number of replicas is one, even if there is only a
	single server in the cluster. The minimum number of replicas is zero, and the
	maximum three. This option is valid for Couchbase and Ephemeral buckets only.

--bucket-port <num>::
	Sets the port that the bucket listens on. This parameter is deprecated and
	not recommended for use.

--bucket-priority <priority>::
	Specifies the priority of this bucket's background tasks. This option is
	valid for Couchbase and Ephemeral buckets only. For Couchbase buckets,
	background tasks may include disk I/O, DCP stream-processing, and
	item-paging. For Ephemeral buckets, background tasks are the same as
	for Couchbase buckets, with the exception of disk I/O, which does not
	apply. The value of this option may be "high" or "low". The default is
	"low". Specifying "high" may result in faster processing; but only makes a
	difference when there is more than one bucket defined for the cluster, and
	when buckets have variant priority settings.

--bucket-eviction-policy <policy>::
	The memory cache eviction policy for this bucket. Couchbase buckets support
	either "valueOnly" eviction or "fullEviction". Specifying the
	"valueEviction" policy means that each key stored in this bucket must be
	kept in memory. This is the default policy and using this policy will
	improve performance of key-value operations, but limits the maximum size of
	the bucket. Using the "fullEviction" policy means that performance will be
	impacted for key-value operations, but the maximum size of the bucket is
	unbounded.

	Ephemeral buckets support either "noEviction" or "nruEviction". Specifying
	"noEviction" means that the bucket will not evict items from the cache if it
	is full. This type of eviction policy should be used for in-memory database
	use cases. Specifying "nruEviction" means that not recently used items will
	be evicted from memory when all memory in the bucket is used. This eviction
	type should be used for caching use cases.

--enable-flush <num>::
	Specifies whether or not the flush operation is allowed for this bucket. To
	enable flush, set this option to "1". To disable flush, set this option to
	"0". By default, flush is disabled.

--enable-index-replica <num>::
	Enables replica view indexes for this bucket. There may be at most one view
	replica index. To enable replica indexes, set the value of this option to
	"1". To disable replica indexes, set the value of this option to "0". By
	default, replica indexes are disabled. This option is valid for Couchbase
	buckets only.

--conflict-resolution <type>::
	Specifies the conflict resolution mechanism used for this bucket. Conflict
	resolution is used for resolving conflicts when using cross data center
	replication (XDCR). Couchbase supports sequence and timestamp based conflict
	resolution. Sequence based timestamp conflict resolution works by picking
	the document that has been updated the most times. For example, if one
	cluster has updated a document two times since the last sync, and the other
	cluster has updated the document three times, then the document that was
	updated three times wins conflict resolution, regardless of the specific
	time the updates took place. Timestamp resolution is based on the time at which
	a document was received. The latest document update always wins conflict
	resolution, if timestamp conflict resolution is specified. Note that
	successful timestamp resolution requires that the clocks on all nodes in all
	clusters be synchronized as precisely as possible: if they are not, the
	results of timestamp conflict resolution are unpredictable.

--wait
	The create bucket command is asynchronous by default. Specifying this flag
	makes this a synchronous operation, by waiting for the bucket to be fully
	created before the command returns.

include::part-host-formats.txt[]

EXAMPLES
--------

To create a Couchbase bucket named "travel-data", which has a memory cache size
of 1GB, run the following command.

	$ couchbase-cli bucket-create -c 192.168.1.5:8091 --username Administrator \
	 --password password --bucket travel-data --bucket-type couchbase \
	 --bucket-ramsize 1024

To create a Couchbase bucket named "airline-data", with a memory cache size of
1GB, has two data replicas, has high disk I/O priority, uses full eviction, and has
flush and replica indexes enabled, run the following command.

	$ couchbase-cli bucket-create -c 192.168.1.5:8091 --username Administrator \
	 --password password --bucket travel-data --bucket-type couchbase \
	 --bucket-ramsize 1024 --bucket-replica 2 --bucket-priority high \
	 --bucket-eviction-policy fullEviction --enable-flush 1 \
	 --enable-index-replica 1

To create a Memcached bucket named "travel-data" which has a memory cache size
of 1GB run the following command.

	$ couchbase-cli bucket-create -c 192.168.1.5:8091 --username Administrator \
	 --password password --bucket travel-data --bucket-type memcached \
	 --bucket-ramsize 1024

To create an Ephemeral bucket named "hotel-data", which has a memory cache size
of 256MB, has flush enabled, has an eviction policy of "nruEviction", has
timestamp based conflict resolution, and is created synchronously, run the
following command.

	$ couchbase-cli bucket-create -c 127.0.0.1:8091 --username Administrator \
	--password password --bucket hotel-data --bucket-type ephemeral \
	--bucket-ramsize 256 --enable-flush 1 --bucket-eviction-policy nruEviction \
	--conflict-resolution timestamp --wait

ENVIRONMENT AND CONFIGURATION VARIABLES
---------------------------------------

include::part-common-env.txt[]

SEE ALSO
--------

linkcbdoc:couchbase-cli-bucket-compact[1].
linkcbdoc:couchbase-cli-bucket-delete[1].
linkcbdoc:couchbase-cli-bucket-edit[1].
linkcbdoc:couchbase-cli-bucket-flush[1].
linkcbdoc:couchbase-cli-bucket-list[1].

include::part-footer.txt[]
